package com.basicprograms;

public class CCI_String_Compression_III {

	public static void main(String[] args) {
		String str = "aabccccaaa";
		System.out.println(compressBad(str));
		
	}
	static	String compressBad(String str){
		int finalLength = countCompression(str);
		if(finalLength >= str.length()) return str;
		
		StringBuilder compressed = new StringBuilder();
		int countConsecutive =0;
		for(int i=0; i<str.length();i++){
			countConsecutive++;
			
			if(i+1 >= str.length() || str.charAt(i) != str.charAt(i+1)){
				compressed.append(str.charAt(i));
				compressed.append(countConsecutive);
				countConsecutive =0;
			}
		}
		return compressed.length() < str.length() ? compressed.toString() : str;
		}
	 static int countCompression(String str) {
		int compressLength =0;
		int countConsecutive =0;
		for(int i=0; i< str.length();i++){
			countConsecutive++;
			
			if(i+1 >= str.length() || str.charAt(i) != str.charAt(i+1)){
			compressLength += 1 + String.valueOf(countConsecutive).length();
			countConsecutive = 0;
			}
		}
		return compressLength;
	}

	

}
